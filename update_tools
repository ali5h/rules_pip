#!/bin/bash -eux

usage() {
  echo "Usage: $0" 1>&2
  exit 1
}

DIR="$( cd "$(dirname "$0")" ; pwd -P )"
export CUSTOM_COMPILE_COMMAND="$(basename "$0")"
export PYTHONPATH="${DIR}/third_party/py"

pushd "${DIR}"
if [ "$#" -eq 0 ] ; then
    bazel run //src:compile -- \
          --allow-unsafe \
          --generate-hashes \
          --no-emit-trusted-host \
          --no-annotate \
          --no-emit-find-links \
          --no-header \
          --no-index \
          --output-file="${DIR}/src/requirements.txt" \
          "${DIR}/src/requirements.in"

    # to update third_party/py run
    # rm -rf third_party/py
    # pip install -t third_party/py -r "${DIR}/src/requirements.txt" --no-deps

    bazel run //src:compile -- \
          --allow-unsafe \
          --no-emit-trusted-host \
          --no-annotate \
          --no-emit-find-links \
          --no-header \
          --no-index \
          --output-file="${DIR}/examples/tests/requirements.txt" \
          "${DIR}/examples/tests/requirements.in"

    bazel build //src:piptool.par //src:compile.par //src:whl.par

    cp -f ./bazel-bin/src/compile.par ./tools/compile.par
    cp -f ./bazel-bin/src/piptool.par ./tools/piptool.par
    cp -f ./bazel-bin/src/whl.par ./tools/whl.par

    bazel test //... --test_output=errors

    pushd examples
    bazel test //... --test_output=errors
else
  usage
fi
