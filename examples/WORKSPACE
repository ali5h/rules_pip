load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# Download the rules_docker repository at release v0.13.0
http_archive(
    name = "io_bazel_rules_docker",
    sha256 = "4521794f0fba2e20f3bf15846ab5e01d5332e587e9ce81629c7f96c793bb7036",
    strip_prefix = "rules_docker-0.14.4",
    urls = ["https://github.com/bazelbuild/rules_docker/releases/download/v0.14.4/rules_docker-v0.14.4.tar.gz"],
)

load(
    "@io_bazel_rules_docker//repositories:repositories.bzl",
    container_repositories = "repositories",
)

container_repositories()

load("@io_bazel_rules_docker//repositories:deps.bzl", container_deps = "deps")

container_deps()

load("@io_bazel_rules_docker//repositories:pip_repositories.bzl", "pip_deps")

pip_deps()

load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_pull",
)

container_pull(
    name = "py3_image_base",
    digest = "sha256:168896be6346aef393bb0cfd0878422a8b9efb7d31f72326a30b6ab59dfcdb6e",
    registry = "gcr.io",
    repository = "distroless/python3-debian10",
)

load(
    "@io_bazel_rules_docker//python3:image.bzl",
    _py_image_repos = "repositories",
)

_py_image_repos()

local_repository(
    name = "com_github_ali5h_rules_pip",
    path = "..",
)

http_archive(
    name = "pytz",
    build_file_content = """
py_library(
    name = "pkg",
    srcs = glob(["*.py"]),
    data = glob(["zoneinfo/*"]),
    visibility = ["//visibility:public"],
    imports = ["."],
)
""",
    sha256 = "acad2d8b20a1af07d4e4c9d2e9285c5ed9104354062f275f3fcd88dcef4f1326",
    strip_prefix = "pytz-2021.3/pytz",
    urls = ["https://files.pythonhosted.org/packages/e3/8e/1cde9d002f48a940b9d9d38820aaf444b229450c0854bdf15305ce4a3d1a/pytz-2021.3.tar.gz"],
)

load("@com_github_ali5h_rules_pip//:defs.bzl", "pip_import")

pip_import(
    name = "piptool_deps_tests_3",
    timeout = 1200,
    compile = False,
    overrides = {
        "@pytz//:pkg": "pytz",
    },
    python_interpreter = "python3.8",
    requirements = "//tests:requirements.txt",
)

load(
    "@piptool_deps_tests_3//:requirements.bzl",
    "pip_install",
)

# pip_install acts like pip install command and can accept arguments
pip_install(pip_args = [
    "--only-binary",
    ":all",
    # more pip install flags
    # "--platform",
    # "manylinux1_x86_64",
])

load("@com_github_ali5h_rules_pip//third_party/cpython:configure.bzl", "python_configure")

python_configure(
    name = "cpython",
    devel = True,
    interpreter = "python3.8",
)

# added at the end to not override rules_docker
register_toolchains(
    "@//:toolchain",
)
